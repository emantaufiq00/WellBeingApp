{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hasib\\\\Documents\\\\GitHub\\\\WellbeingApp\\\\src\\\\fitness.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport app from './firebaseconfig';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport clsx from 'clsx';\nimport Drawer from '@material-ui/core/Drawer';\nimport { useHistory } from 'react-router-dom';\nimport FirebaseService from './firebaseservice';\nimport './formstyle.css';\nimport Bike from './bikese.png';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet userAuth = app.auth().currentUser;\n\nclass Fitness extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      app.auth().onAuthStateChanged(user => {\n        if (user) {\n          console.log(\"User is logged in\");\n          userAuth = user;\n          console.log(userAuth);\n          FirebaseService.getAllFitness(userAuth.uid).on(\"value\", this.onDataChange);\n        } else {\n          console.log(\"User not logged in\");\n        }\n      });\n\n      if (this.state.isLoading === true) {\n        this.setState({\n          isLoading: false\n        });\n      }\n\n      if (userAuth !== null) {\n        console.log(userAuth.uid);\n      }\n    };\n\n    this.componentWillUnmount = () => {\n      app.auth().onAuthStateChanged(user => {\n        if (user) {\n          console.log(\"User is logged in\");\n          userAuth = user;\n          console.log(userAuth);\n          FirebaseService.getAllFitness(userAuth.uid).off(\"value\", this.onDataChange);\n        } else {\n          console.log(\"User not logged in\");\n        }\n      });\n\n      if (userAuth !== null) {\n        console.log(userAuth.uid);\n      }\n    };\n\n    this.onDataChange = items => {\n      console.log(items);\n      let fitnesslist = [];\n      items.forEach(item => {\n        let data = item.val();\n        fitnesslist.push({\n          key: item.key,\n          calories: data.CaloriesBurnt,\n          date: data.DateOfExercise,\n          difficulty: data.Difficulty,\n          exercise: data.ExerciseType\n        });\n      });\n      this.setState({\n        fitnesshistory: fitnesslist,\n        isLoading: false\n      });\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        exercise,\n        calories,\n        difficulty\n      } = event.target.elements; // eslint-disable-next-line react/no-direct-mutation-state\n\n      const unixtime = Math.round(new Date() / 1000);\n      this.state.Fitness = {\n        ExerciseType: exercise.value,\n        CaloriesBurnt: calories.value,\n        Difficulty: difficulty.value,\n        DateOfExercise: unixtime\n      };\n      FirebaseService.addFitness(this.state.Fitness, userAuth.uid);\n    };\n\n    this.state = {\n      Fitness: {\n        ExerciseType: '',\n        CaloriesBurnt: '',\n        Difficulty: '',\n        DateOfExercise: ''\n      },\n      fitnesshistory: [],\n      open: false,\n      isLoading: true\n    };\n  }\n\n  render() {\n    const {\n      isLoading,\n      fitnesshistory\n    } = this.state;\n    const fitnessList = fitnesshistory.map(item => {\n      let datet = new Date(item.date * 1000);\n      const format = moment(datet).format('L');\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          style: {\n            whiteSpace: 'nowrap'\n          },\n          children: format\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.exercise\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.calories\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.difficulty\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this)]\n      }, item.key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 24\n      }, this);\n    });\n    console.log(fitnessList);\n\n    if (isLoading === true) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 24\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(ButtonAppBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"body\", {\n        className: \"back\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"fithead\",\n            children: \"Welcome to Fitness Tracker \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: Bike,\n            alt: \"Bike\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"type\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Type of exercise: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"exercise\",\n              id: \"exercise\",\n              onChange: e => e.target.value,\n              placeholder: \"Enter name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"kcal\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Calories burnt: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              min: \"0\",\n              name: \"calories\",\n              id: \"calories\",\n              onChange: e => e.target.value,\n              placeholder: \"Total calories burnt\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"diff\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Difficulty level: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"difficulty\",\n              id: \"difficulty\",\n              onChange: e => e.target.value,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                disabled: true,\n                selected: true,\n                children: \"Select the difficulty\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"very easy\",\n                children: \"Very Easy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"easy\",\n                children: \"Easy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"moderate\",\n                children: \"Moderate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"hard\",\n                children: \"Hard\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"very hard\",\n                children: \"Very hard\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit Exercise\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.setState({\n            open: true\n          }),\n          children: \"View Exercise History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n          open: this.state.open,\n          onClose: () => this.setState({\n            open: false\n          }),\n          \"aria-labelledby\": \"form-dialog-title\",\n          children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n            id: \"form-dialog-title\",\n            children: \"Your Nutrition History\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    width: \"20%\",\n                    children: \"Date of Exercise\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 192,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    width: \"20%\",\n                    children: \"Exercise Performed\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 193,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    width: \"20%\",\n                    children: \"No. of Calories Burned\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    width: \"20%\",\n                    children: \"Difficulty of Exercise\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: fitnessList\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n            children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 36\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => this.setState({\n                open: false\n              }),\n              color: \"primary\",\n              children: \"Go Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1\n  },\n  list: {\n    width: 250\n  },\n  fullList: {\n    width: 'auto'\n  }\n}));\n\nfunction ButtonAppBar() {\n  _s();\n\n  const classes = useStyles();\n  const history = useHistory();\n  const [state, setState] = React.useState({\n    left: false\n  });\n\n  const toggleDrawer = (anchor, open) => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state,\n      [anchor]: open\n    });\n  };\n\n  const goToSelected = text => {\n    if (text === 'Home') {\n      history.push('/');\n    } else if (text === 'Book Appointment') {\n      history.push('/bookappointment');\n    } else if (text === 'Mood') {\n      history.push('/mood');\n    } else if (text === 'Nutrition') {\n      history.push('/nutrition');\n    } else if (text === 'Information') {\n      history.push('/information');\n    }\n  };\n\n  const list = anchor => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: clsx(classes.list, {\n      [classes.fullList]: anchor === 'top' || anchor === 'bottom'\n    }),\n    role: \"presentation\",\n    onClick: toggleDrawer(anchor, false),\n    onKeyDown: toggleDrawer(anchor, false),\n    children: [/*#__PURE__*/_jsxDEV(List, {\n      children: ['Home', 'Feed', 'Mood', 'Nutrition', 'Book Appointment'].map((text, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        onClick: () => goToSelected(text),\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 17\n        }, this)\n      }, text, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: ['Information', 'Settings'].map((text, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        onClick: () => goToSelected(text),\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 17\n        }, this)\n      }, text, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 267,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          edge: \"start\",\n          onClick: toggleDrawer('left', true),\n          className: classes.menuButton,\n          color: \"inherit\",\n          \"aria-label\": \"menu\",\n          children: [/*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n            anchor: 'left',\n            open: state['left'],\n            onClose: toggleDrawer('left', false),\n            children: list('left')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          className: classes.title,\n          children: \"Nutrition Tracker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"inherit\",\n          onClick: () => app.auth().signOut(),\n          children: \"Log Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 294,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ButtonAppBar, \"VBUzEWtY2HJlcBDRbYBr6zQaSZE=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = ButtonAppBar;\nexport default Fitness;\n\nvar _c;\n\n$RefreshReg$(_c, \"ButtonAppBar\");","map":{"version":3,"sources":["C:/Users/hasib/Documents/GitHub/WellbeingApp/src/fitness.js"],"names":["React","useEffect","useState","Component","Button","Dialog","DialogActions","DialogContent","DialogTitle","app","makeStyles","AppBar","Toolbar","Typography","IconButton","MenuIcon","List","Divider","ListItem","ListItemIcon","ListItemText","clsx","Drawer","useHistory","FirebaseService","Bike","moment","userAuth","auth","currentUser","Fitness","constructor","props","componentDidMount","onAuthStateChanged","user","console","log","getAllFitness","uid","on","onDataChange","state","isLoading","setState","componentWillUnmount","off","items","fitnesslist","forEach","item","data","val","push","key","calories","CaloriesBurnt","date","DateOfExercise","difficulty","Difficulty","exercise","ExerciseType","fitnesshistory","handleSubmit","event","preventDefault","target","elements","unixtime","Math","round","Date","value","addFitness","open","render","fitnessList","map","datet","format","whiteSpace","e","useStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","list","width","fullList","ButtonAppBar","classes","history","left","toggleDrawer","anchor","type","goToSelected","text","index","signOut"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAO,iBAAP;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,IAAIC,QAAQ,GAAGlB,GAAG,CAACmB,IAAJ,GAAWC,WAA1B;;AACC,MAAMC,OAAN,SAAsB3B,SAAtB,CAAgC;AAE7B4B,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAgBnBC,iBAhBmB,GAgBC,MAAM;AACtBxB,MAAAA,GAAG,CAACmB,IAAJ,GAAWM,kBAAX,CAA+BC,IAAD,IAAU;AAC7C,YAAIA,IAAJ,EAAU;AACTC,UAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACYV,UAAAA,QAAQ,GAAGQ,IAAX;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYV,QAAZ;AACAH,UAAAA,eAAe,CAACc,aAAhB,CAA8BX,QAAQ,CAACY,GAAvC,EAA4CC,EAA5C,CAA+C,OAA/C,EAAwD,KAAKC,YAA7D;AAEZ,SAND,MAMO;AACML,UAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACZ;AAED,OAXK;;AAYA,UAAI,KAAKK,KAAL,CAAWC,SAAX,KAAyB,IAA7B,EAAmC;AAC/B,aAAKC,QAAL,CAAc;AAAED,UAAAA,SAAS,EAAE;AAAb,SAAd;AACH;;AACD,UAAIhB,QAAQ,KAAK,IAAjB,EAAuB;AACnBS,QAAAA,OAAO,CAACC,GAAR,CAAYV,QAAQ,CAACY,GAArB;AACH;AACJ,KAnCkB;;AAAA,SAqCnBM,oBArCmB,GAqCI,MAAM;AACzBpC,MAAAA,GAAG,CAACmB,IAAJ,GAAWM,kBAAX,CAA+BC,IAAD,IAAU;AAC7C,YAAIA,IAAJ,EAAU;AACTC,UAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACYV,UAAAA,QAAQ,GAAGQ,IAAX;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYV,QAAZ;AACAH,UAAAA,eAAe,CAACc,aAAhB,CAA8BX,QAAQ,CAACY,GAAvC,EAA4CO,GAA5C,CAAgD,OAAhD,EAAyD,KAAKL,YAA9D;AAEZ,SAND,MAMO;AACML,UAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACZ;AAED,OAXK;;AAYA,UAAIV,QAAQ,KAAK,IAAjB,EAAuB;AACnBS,QAAAA,OAAO,CAACC,GAAR,CAAYV,QAAQ,CAACY,GAArB;AACH;AACJ,KArDkB;;AAAA,SAuDnBE,YAvDmB,GAuDHM,KAAD,IAAW;AACtBX,MAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;AACA,UAAIC,WAAW,GAAG,EAAlB;AACAD,MAAAA,KAAK,CAACE,OAAN,CAAcC,IAAI,IAAI;AAClB,YAAIC,IAAI,GAAGD,IAAI,CAACE,GAAL,EAAX;AACAJ,QAAAA,WAAW,CAACK,IAAZ,CAAiB;AACbC,UAAAA,GAAG,EAAEJ,IAAI,CAACI,GADG;AAEbC,UAAAA,QAAQ,EAAEJ,IAAI,CAACK,aAFF;AAGbC,UAAAA,IAAI,EAAEN,IAAI,CAACO,cAHE;AAIbC,UAAAA,UAAU,EAAER,IAAI,CAACS,UAJJ;AAKbC,UAAAA,QAAQ,EAAEV,IAAI,CAACW;AALF,SAAjB;AAOH,OATD;AAWA,WAAKlB,QAAL,CAAc;AACVmB,QAAAA,cAAc,EAAEf,WADN;AAEVL,QAAAA,SAAS,EAAE;AAFD,OAAd;AAIH,KAzEkB;;AAAA,SA2EnBqB,YA3EmB,GA2EJ,MAAMC,KAAN,IAAgB;AAC3BA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAM;AAAEL,QAAAA,QAAF;AAAYN,QAAAA,QAAZ;AAAsBI,QAAAA;AAAtB,UAAqCM,KAAK,CAACE,MAAN,CAAaC,QAAxD,CAF2B,CAG3B;;AACA,YAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAW,IAAIC,IAAJ,KAAW,IAAtB,CAAjB;AACA,WAAK9B,KAAL,CAAWZ,OAAX,GAAqB;AACjBgC,QAAAA,YAAY,EAAED,QAAQ,CAACY,KADN;AAEjBjB,QAAAA,aAAa,EAAED,QAAQ,CAACkB,KAFP;AAGjBb,QAAAA,UAAU,EAAED,UAAU,CAACc,KAHN;AAIjBf,QAAAA,cAAc,EAAEW;AAJC,OAArB;AAMA7C,MAAAA,eAAe,CAACkD,UAAhB,CAA2B,KAAKhC,KAAL,CAAWZ,OAAtC,EAA+CH,QAAQ,CAACY,GAAxD;AACH,KAvFkB;;AAGf,SAAKG,KAAL,GAAa;AACTZ,MAAAA,OAAO,EAAE;AACRgC,QAAAA,YAAY,EAAE,EADN;AAERN,QAAAA,aAAa,EAAE,EAFP;AAGRI,QAAAA,UAAU,EAAE,EAHJ;AAIRF,QAAAA,cAAc,EAAE;AAJR,OADA;AAOTK,MAAAA,cAAc,EAAE,EAPP;AAQTY,MAAAA,IAAI,EAAE,KARG;AASThC,MAAAA,SAAS,EAAE;AATF,KAAb;AAWH;;AA6EDiC,EAAAA,MAAM,GAAG;AACD,UAAM;AAACjC,MAAAA,SAAD;AAAYoB,MAAAA;AAAZ,QAA8B,KAAKrB,KAAzC;AAGA,UAAMmC,WAAW,GAAGd,cAAc,CAACe,GAAf,CAAmB5B,IAAI,IAAI;AAC3C,UAAI6B,KAAK,GAAG,IAAIP,IAAJ,CAAStB,IAAI,CAACO,IAAL,GAAU,IAAnB,CAAZ;AACA,YAAMuB,MAAM,GAAGtD,MAAM,CAACqD,KAAD,CAAN,CAAcC,MAAd,CAAqB,GAArB,CAAf;AACA,0BAAO;AAAA,gCACH;AAAI,UAAA,KAAK,EAAE;AAACC,YAAAA,UAAU,EAAE;AAAb,WAAX;AAAA,oBAAoCD;AAApC;AAAA;AAAA;AAAA;AAAA,gBADG,eAEH;AAAA,oBAAK9B,IAAI,CAACW;AAAV;AAAA;AAAA;AAAA;AAAA,gBAFG,eAGH;AAAA,oBAAKX,IAAI,CAACK;AAAV;AAAA;AAAA;AAAA;AAAA,gBAHG,eAIH;AAAA,oBAAKL,IAAI,CAACS;AAAV;AAAA;AAAA;AAAA;AAAA,gBAJG;AAAA,SAAST,IAAI,CAACI,GAAd;AAAA;AAAA;AAAA;AAAA,cAAP;AAMH,KATmB,CAApB;AAWIlB,IAAAA,OAAO,CAACC,GAAR,CAAYwC,WAAZ;;AAEJ,QAAIlC,SAAS,KAAK,IAAlB,EAAwB;AACpB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AAEL,wBACI;AAAA,8BACI;AAAA,+BACA,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADJ,eAGU;AAAA;AAAA;AAAA;AAAA,cAHV,eAII;AAAM,QAAA,SAAS,EAAG,MAAlB;AAAA,gCACI;AAAM,UAAA,QAAQ,EAAE,KAAKqB,YAArB;AAAA,kCACI;AAAI,YAAA,SAAS,EAAE,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAK,YAAA,GAAG,EAAEvC,IAAV;AAAgB,YAAA,GAAG,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGQ;AAAK,YAAA,SAAS,EAAG,MAAjB;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAO,cAAA,IAAI,EAAC,MAAZ;AACI,cAAA,IAAI,EAAC,UADT;AAEI,cAAA,EAAE,EAAC,UAFP;AAGI,cAAA,QAAQ,EAAIyD,CAAC,IAAIA,CAAC,CAACf,MAAF,CAASM,KAH9B;AAII,cAAA,WAAW,EAAG;AAJlB;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHR,eAWQ;AAAK,YAAA,SAAS,EAAG,MAAjB;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAO,cAAA,IAAI,EAAC,QAAZ;AAAqB,cAAA,GAAG,EAAC,GAAzB;AACA,cAAA,IAAI,EAAC,UADL;AAEA,cAAA,EAAE,EAAC,UAFH;AAGA,cAAA,QAAQ,EAAIS,CAAC,IAAIA,CAAC,CAACf,MAAF,CAASM,KAH1B;AAIA,cAAA,WAAW,EAAG;AAJd;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXR,eAoBQ;AAAK,YAAA,SAAS,EAAG,MAAjB;AAAA,oCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,eAEA;AAAQ,cAAA,IAAI,EAAC,YAAb;AACA,cAAA,EAAE,EAAC,YADH;AAEA,cAAA,QAAQ,EAAGS,CAAC,IAAIA,CAAC,CAACf,MAAF,CAASM,KAFzB;AAAA,sCAGI;AAAQ,gBAAA,KAAK,EAAC,EAAd;AAAiB,gBAAA,QAAQ,MAAzB;AAA0B,gBAAA,QAAQ,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ,eAII;AAAQ,gBAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ,eAKI;AAAQ,gBAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALJ,eAMI;AAAQ,gBAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANJ,eAOI;AAAQ,gBAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPJ,eAQI;AAAQ,gBAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,kBApBR,eAiCQ;AAAQ,YAAA,IAAI,EAAE,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAjCR;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAoCI;AAAQ,UAAA,OAAO,EAAG,MAAM,KAAK7B,QAAL,CAAc;AAAC+B,YAAAA,IAAI,EAAE;AAAP,WAAd,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBApCJ,eAuCI,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAE,KAAKjC,KAAL,CAAWiC,IAAzB;AAA+B,UAAA,OAAO,EAAG,MAAM,KAAK/B,QAAL,CAAc;AAAC+B,YAAAA,IAAI,EAAE;AAAP,WAAd,CAA/C;AAA6E,6BAAgB,mBAA7F;AAAA,kCACA,QAAC,WAAD;AAAa,YAAA,EAAE,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA,QAAC,aAAD;AAAA,mCACI;AAAA,sCACI;AAAA,uCACI;AAAA,0CACI;AAAI,oBAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI;AAAI,oBAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ,eAGI;AAAI,oBAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHJ,eAII;AAAI,oBAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBADJ,eASI;AAAA,0BACKE;AADL;AAAA;AAAA;AAAA;AAAA,sBATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAFA,eAiBA,QAAC,aAAD;AAAA,oCAAe;AAAA;AAAA;AAAA;AAAA,oBAAf,eACI,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAG,MAAM,KAAKjC,QAAL,CAAc;AAAC+B,gBAAAA,IAAI,EAAE;AAAP,eAAd,CAAxB;AAAsD,cAAA,KAAK,EAAC,SAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAjBA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAvCJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAsEH;;AAxL4B;;AA2LjC,MAAMQ,SAAS,GAAGzE,UAAU,CAAE0E,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN,GAD+B;AAIrCC,EAAAA,UAAU,EAAE;AACVC,IAAAA,WAAW,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd;AADH,GAJyB;AAOrCC,EAAAA,KAAK,EAAE;AACLJ,IAAAA,QAAQ,EAAE;AADL,GAP8B;AAUrCK,EAAAA,IAAI,EAAE;AACFC,IAAAA,KAAK,EAAE;AADL,GAV+B;AAarCC,EAAAA,QAAQ,EAAE;AACVD,IAAAA,KAAK,EAAE;AADG;AAb2B,CAAZ,CAAD,CAA5B;;AAkBA,SAASE,YAAT,GAAwB;AAAA;;AACpB,QAAMC,OAAO,GAAGZ,SAAS,EAAzB;AACA,QAAMa,OAAO,GAAGzE,UAAU,EAA1B;AACA,QAAM,CAACmB,KAAD,EAAQE,QAAR,IAAoB5C,KAAK,CAACE,QAAN,CAAe;AACrC+F,IAAAA,IAAI,EAAE;AAD+B,GAAf,CAA1B;;AAIA,QAAMC,YAAY,GAAG,CAACC,MAAD,EAASxB,IAAT,KAAmBV,KAAD,IAAW;AAC9C,QAAIA,KAAK,CAACmC,IAAN,KAAe,SAAf,KAA6BnC,KAAK,CAACX,GAAN,KAAc,KAAd,IAAuBW,KAAK,CAACX,GAAN,KAAc,OAAlE,CAAJ,EAAgF;AAChF;AACC;;AAEDV,IAAAA,QAAQ,CAAC,EAAE,GAAGF,KAAL;AAAY,OAACyD,MAAD,GAAUxB;AAAtB,KAAD,CAAR;AACH,GAND;;AAQA,QAAM0B,YAAY,GAAIC,IAAD,IAAU;AAC3B,QAAIA,IAAI,KAAK,MAAb,EAAqB;AACjBN,MAAAA,OAAO,CAAC3C,IAAR,CAAa,GAAb;AACH,KAFD,MAGK,IAAIiD,IAAI,KAAK,kBAAb,EAAiC;AAClCN,MAAAA,OAAO,CAAC3C,IAAR,CAAa,kBAAb;AACH,KAFI,MAGA,IAAIiD,IAAI,KAAK,MAAb,EAAqB;AACtBN,MAAAA,OAAO,CAAC3C,IAAR,CAAa,OAAb;AACH,KAFI,MAGA,IAAIiD,IAAI,KAAK,WAAb,EAA0B;AAC3BN,MAAAA,OAAO,CAAC3C,IAAR,CAAa,YAAb;AACH,KAFI,MAGA,IAAIiD,IAAI,KAAK,aAAb,EAA4B;AAC7BN,MAAAA,OAAO,CAAC3C,IAAR,CAAa,cAAb;AACH;AACJ,GAhBD;;AAkBA,QAAMsC,IAAI,GAAIQ,MAAD,iBACT;AACA,IAAA,SAAS,EAAE9E,IAAI,CAAC0E,OAAO,CAACJ,IAAT,EAAe;AAC1B,OAACI,OAAO,CAACF,QAAT,GAAoBM,MAAM,KAAK,KAAX,IAAoBA,MAAM,KAAK;AADzB,KAAf,CADf;AAIA,IAAA,IAAI,EAAC,cAJL;AAKA,IAAA,OAAO,EAAED,YAAY,CAACC,MAAD,EAAS,KAAT,CALrB;AAMA,IAAA,SAAS,EAAED,YAAY,CAACC,MAAD,EAAS,KAAT,CANvB;AAAA,4BAQA,QAAC,IAAD;AAAA,gBACK,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,WAAzB,EAAsC,kBAAtC,EAA0DrB,GAA1D,CAA8D,CAACwB,IAAD,EAAOC,KAAP,kBAC/D,QAAC,QAAD;AAAU,QAAA,MAAM,MAAhB;AAA4B,QAAA,OAAO,EAAG,MAAMF,YAAY,CAACC,IAAD,CAAxD;AAAA,+BACI,QAAC,YAAD;AAAc,UAAA,OAAO,EAAEA;AAAvB;AAAA;AAAA;AAAA;AAAA;AADJ,SAAsBA,IAAtB;AAAA;AAAA;AAAA;AAAA,cADC;AADL;AAAA;AAAA;AAAA;AAAA,YARA,eAeA,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAfA,eAgBA,QAAC,IAAD;AAAA,gBACK,CAAC,aAAD,EAAgB,UAAhB,EAA4BxB,GAA5B,CAAgC,CAACwB,IAAD,EAAOC,KAAP,kBACjC,QAAC,QAAD;AAAU,QAAA,MAAM,MAAhB;AAA4B,QAAA,OAAO,EAAG,MAAMF,YAAY,CAACC,IAAD,CAAxD;AAAA,+BACI,QAAC,YAAD;AAAc,UAAA,OAAO,EAAEA;AAAvB;AAAA;AAAA;AAAA;AAAA;AADJ,SAAsBA,IAAtB;AAAA;AAAA;AAAA;AAAA,cADC;AADL;AAAA;AAAA;AAAA;AAAA,YAhBA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;;AA2BA,sBACI;AAAK,IAAA,SAAS,EAAEP,OAAO,CAACV,IAAxB;AAAA,2BACI,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAC,QAAjB;AAAA,6BACA,QAAC,OAAD;AAAA,gCACI,QAAC,UAAD;AAAY,UAAA,IAAI,EAAC,OAAjB;AAAyB,UAAA,OAAO,EAAEa,YAAY,CAAC,MAAD,EAAS,IAAT,CAA9C;AAA8D,UAAA,SAAS,EAAEH,OAAO,CAACR,UAAjF;AAA6F,UAAA,KAAK,EAAC,SAAnG;AAA6G,wBAAW,MAAxH;AAAA,kCACA,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA,QAAC,MAAD;AAAQ,YAAA,MAAM,EAAE,MAAhB;AAAwB,YAAA,IAAI,EAAE7C,KAAK,CAAC,MAAD,CAAnC;AAA6C,YAAA,OAAO,EAAEwD,YAAY,CAAC,MAAD,EAAS,KAAT,CAAlE;AAAA,sBACSP,IAAI,CAAC,MAAD;AADb;AAAA;AAAA;AAAA;AAAA,kBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOI,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAyB,UAAA,SAAS,EAAEI,OAAO,CAACL,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAUI,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,SAAd;AAAwB,UAAA,OAAO,EAAE,MAAMjF,GAAG,CAACmB,IAAJ,GAAW4E,OAAX,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH;;GA9EQV,Y;UACWX,S,EACA5D,U;;;KAFXuE,Y;AAgFT,eAAehE,OAAf","sourcesContent":["import React, { useEffect, useState, Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport app from './firebaseconfig';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport clsx from 'clsx';\nimport Drawer from '@material-ui/core/Drawer';\nimport { useHistory } from 'react-router-dom';\nimport FirebaseService from './firebaseservice';\nimport './formstyle.css'\nimport Bike from './bikese.png'\nimport moment from 'moment'\n\nlet userAuth = app.auth().currentUser;\n class Fitness extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            Fitness: {\n             ExerciseType: '',\n             CaloriesBurnt: '',\n             Difficulty: '',\n             DateOfExercise: ''\n            },\n            fitnesshistory: [],\n            open: false,\n            isLoading: true\n        }\n    }\n\n    componentDidMount = () => {\n        app.auth().onAuthStateChanged((user) => {\n\t\t\tif (user) {\n\t\t\t\tconsole.log(\"User is logged in\")\n                userAuth = user\n                console.log(userAuth)\n                FirebaseService.getAllFitness(userAuth.uid).on(\"value\", this.onDataChange);\n\n\t\t\t} else {\n                console.log(\"User not logged in\")\n\t\t\t}\n            \n\t\t});\n        if (this.state.isLoading === true) {\n            this.setState({ isLoading: false })\n        }\n        if (userAuth !== null) {\n            console.log(userAuth.uid)\n        }\n    }\n\n    componentWillUnmount = () => {\n        app.auth().onAuthStateChanged((user) => {\n\t\t\tif (user) {\n\t\t\t\tconsole.log(\"User is logged in\")\n                userAuth = user\n                console.log(userAuth)\n                FirebaseService.getAllFitness(userAuth.uid).off(\"value\", this.onDataChange);\n\n\t\t\t} else {\n                console.log(\"User not logged in\")\n\t\t\t}\n            \n\t\t});\n        if (userAuth !== null) {\n            console.log(userAuth.uid)\n        }\n    }\n\n    onDataChange = (items) => {\n        console.log(items);\n        let fitnesslist = [];\n        items.forEach(item => {\n            let data = item.val();\n            fitnesslist.push({\n                key: item.key,\n                calories: data.CaloriesBurnt,\n                date: data.DateOfExercise,\n                difficulty: data.Difficulty,\n                exercise: data.ExerciseType             \n            });\n        });\n    \n        this.setState({\n            fitnesshistory: fitnesslist,\n            isLoading: false\n        });\n    }\n    \n    handleSubmit = async(event) => {\n        event.preventDefault()\n        const { exercise, calories, difficulty } = event.target.elements;\n        // eslint-disable-next-line react/no-direct-mutation-state\n        const unixtime = Math.round(new Date()/1000);\n        this.state.Fitness = {\n            ExerciseType: exercise.value,\n            CaloriesBurnt: calories.value,\n            Difficulty: difficulty.value,\n            DateOfExercise: unixtime\n        };\n        FirebaseService.addFitness(this.state.Fitness, userAuth.uid)\n    }\n    \n\n\n    render() {\n            const {isLoading, fitnesshistory} = this.state;\n        \n                \n            const fitnessList = fitnesshistory.map(item => {\n                let datet = new Date(item.date*1000);\n                const format = moment(datet).format('L');\n                return <tr key={item.key}>\n                    <td style={{whiteSpace: 'nowrap'}}>{format}</td>\n                    <td>{item.exercise}</td>\n                    <td>{item.calories}</td>\n                    <td>{item.difficulty}</td> \n                </tr>\n            });\n        \n                console.log(fitnessList)\n\n            if (isLoading === true) {\n                return <p>Loading...</p>\n            }\n\n        return (\n            <div>\n                <div>\n                <ButtonAppBar />\n                </div><br />\n                <body className = 'back' >\n                    <form onSubmit={this.handleSubmit}> \n                        <h3 className= 'fithead'>Welcome to Fitness Tracker </h3> \n                        <img src={Bike} alt=\"Bike\"/> \n                            <div className = 'type'>\n                                <label>Type of exercise: </label>\n                                <input type=\"text\" \n                                    name=\"exercise\"\n                                    id=\"exercise\"\n                                    onChange ={ e => e.target.value }\n                                    placeholder = \"Enter name\" />\n                            </div>\n                            <div className = 'kcal'>\n                                <label>Calories burnt: </label>\n                                <input type=\"number\" min=\"0\"\n                                name=\"calories\"\n                                id=\"calories\"\n                                onChange ={ e => e.target.value }\n                                placeholder = \"Total calories burnt\"\n                                />\n                            </div>\n                            <div className = 'diff'>\n                            <label>Difficulty level: </label>\n                            <select name=\"difficulty\"\n                            id=\"difficulty\" \n                            onChange={ e => e.target.value }>\n                                <option value=\"\" disabled selected>Select the difficulty</option>\n                                <option value=\"very easy\">Very Easy</option>\n                                <option value=\"easy\">Easy</option>\n                                <option value=\"moderate\">Moderate</option>\n                                <option value=\"hard\">Hard</option>\n                                <option value=\"very hard\">Very hard</option>\n                            </select>\n                            </div>\n                            <button type= 'submit'>Submit Exercise</button>\n                    </form>\n                    <button onClick={ () => this.setState({open: true})}>\n                    View Exercise History\n                    </button>\n                    <Dialog open={this.state.open} onClose={ () => this.setState({open: false})} aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Your Nutrition History</DialogTitle>\n                    <DialogContent>\n                        <table>\n                            <thead>\n                                <tr>\n                                    <th width=\"20%\">Date of Exercise</th>\n                                    <th width=\"20%\">Exercise Performed</th>\n                                    <th width=\"20%\">No. of Calories Burned</th>\n                                    <th width=\"20%\">Difficulty of Exercise</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {fitnessList}\n                            </tbody>\n                        </table>                 \n                    </DialogContent>\n                    <DialogActions><br />\n                        <Button onClick={ () => this.setState({open: false})} color=\"primary\">\n                        Go Back\n                        </Button>\n                    </DialogActions>\n                    </Dialog>   \n                </body>\n            </div>\n            )\n    }\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n    list: {\n        width: 250,\n    },\n    fullList: {\n    width: 'auto',\n    },\n  }));\n\nfunction ButtonAppBar() {\n    const classes = useStyles();\n    const history = useHistory();\n    const [state, setState] = React.useState({\n        left: false,\n    });\n    \n    const toggleDrawer = (anchor, open) => (event) => {\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n        return;\n        }\n    \n        setState({ ...state, [anchor]: open });\n    };\n\n    const goToSelected = (text) => {\n        if (text === 'Home') {\n            history.push('/')\n        }\n        else if (text === 'Book Appointment') {\n            history.push('/bookappointment')\n        }\n        else if (text === 'Mood') {\n            history.push('/mood')\n        }\n        else if (text === 'Nutrition') {\n            history.push('/nutrition')\n        }\n        else if (text === 'Information') {\n            history.push('/information')\n        }\n    }\n    \n    const list = (anchor) => (\n        <div\n        className={clsx(classes.list, {\n            [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n        })}\n        role=\"presentation\"\n        onClick={toggleDrawer(anchor, false)}\n        onKeyDown={toggleDrawer(anchor, false)}\n        >\n        <List>\n            {['Home', 'Feed', 'Mood', 'Nutrition', 'Book Appointment'].map((text, index) => (\n            <ListItem button key={text} onClick={ () => goToSelected(text)}>\n                <ListItemText primary={text} />\n            </ListItem>\n            ))}\n        </List>\n        <Divider />\n        <List>\n            {['Information', 'Settings'].map((text, index) => (\n            <ListItem button key={text} onClick={ () => goToSelected(text)}>\n                <ListItemText primary={text} />\n            </ListItem>\n            ))}\n        </List>\n        </div>\n    );\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n            <Toolbar>\n                <IconButton edge=\"start\" onClick={toggleDrawer('left', true)} className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                <MenuIcon />\n                <Drawer anchor={'left'} open={state['left']} onClose={toggleDrawer('left', false)}>\n                        {list('left')}\n                    </Drawer>\n                </IconButton>\n                <Typography variant=\"h6\" className={classes.title}>\n                Nutrition Tracker\n                </Typography>\n                <Button color=\"inherit\" onClick={() => app.auth().signOut()}>Log Out</Button>\n            </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n\nexport default Fitness;\n"]},"metadata":{},"sourceType":"module"}