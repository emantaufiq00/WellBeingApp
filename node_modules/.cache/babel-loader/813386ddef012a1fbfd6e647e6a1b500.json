{"ast":null,"code":"import app from './firebaseconfig.jsx';\nconst user = app.auth().currentUser;\nlet foods = [];\n\nclass FirebaseService {\n  constructor(props) {\n    this.addFood = (food, id) => {\n      const dbFood = app.database().ref(\"/Users/\" + id + \"/Food\");\n      dbFood.push(food);\n    };\n\n    this.addInfo = (info, id) => {\n      const dbInfo = app.database().ref(\"/Users/\" + id + \"/Info\");\n      dbInfo.push(info);\n    };\n\n    this.addMood = (mood, id) => {\n      const dbMood = app.database().ref(\"/Users/\" + id + \"/Mood\");\n      dbMood.push(mood);\n    };\n\n    this.addFitness = (fitness, id) => {\n      const dbFitness = app.database().ref(\"/Users/\" + id + \"/Fitness\");\n      dbFitness.push(fitness);\n    };\n\n    this.addApp = (appoint, date, id) => {\n      const dbApp = app.database().ref(\"/Appointments/\" + date);\n      dbApp.push(appoint);\n    };\n\n    this.state = {\n      emptyFood: {\n        Calories: \"\",\n        FoodName: \"\"\n      }\n    };\n  }\n\n  createUser(user, id) {\n    app.database().ref(\"/Users/\" + id + \"/Info\").set(user).catch(error => {\n      console.log(error.message);\n    });\n    app.database().ref(\"/Users/\" + id + \"/Food\").set(this.state.emptyFood).catch(error => {\n      console.log(error.message);\n    });\n  }\n\n  getAllFood(id) {\n    const dbFood = app.database().ref(\"/Users/\" + id + \"/Food\");\n    return dbFood;\n  }\n\n  getFood(key, id) {\n    const dbFood = app.database().ref(\"/Users/\" + id + \"/Food\");\n    return dbFood.child(key);\n  }\n\n  updateFood(key, value, id) {\n    const dbFood = app.database().ref(\"/Users/\" + id + \"/Food\");\n    return dbFood.child(key).update(value);\n  }\n\n  getInfo(id) {\n    const dbInfo = app.database().ref(\"/Users/\" + id + \"/Info\");\n    return dbInfo;\n  }\n\n  updateInfo(key, value, id) {\n    const dbInfo = app.database().ref(\"/Users/\" + id + \"/Info\");\n    return dbInfo.child(key).update(value);\n  }\n\n  getAllMood(id) {\n    const dbMood = app.database().ref(\"/Users/\" + id + \"/Mood\");\n    return dbMood;\n  }\n\n  getMood(key, id) {\n    const dbMood = app.database().ref(\"/Users/\" + id + \"/Mood\");\n    return dbMood.child(key);\n  }\n\n  updateMood(key, value, id) {\n    const dbMood = app.database().ref(\"/Users/\" + id + \"/Mood\");\n    return dbMood.child(key).update(value);\n  }\n\n  getAllFitness(id) {\n    const dbFitness = app.database().ref(\"/Users/\" + id + \"/Fitness\");\n    return dbFitness;\n  }\n\n  getFitness(key, id) {\n    const dbFitness = app.database().ref(\"/Users/\" + id + \"/Fitness\");\n    return dbFitness.child(key);\n  }\n\n  updateFitness(key, value, id) {\n    const dbFitness = app.database().ref(\"/Users/\" + id + \"/Fitness\");\n    return dbFitness.child(key).update(value);\n  }\n\n}\n\nexport default new FirebaseService();","map":{"version":3,"sources":["C:/Users/hasib/Documents/GitHub/WellbeingApp/src/firebaseservice.js"],"names":["app","user","auth","currentUser","foods","FirebaseService","constructor","props","addFood","food","id","dbFood","database","ref","push","addInfo","info","dbInfo","addMood","mood","dbMood","addFitness","fitness","dbFitness","addApp","appoint","date","dbApp","state","emptyFood","Calories","FoodName","createUser","set","catch","error","console","log","message","getAllFood","getFood","key","child","updateFood","value","update","getInfo","updateInfo","getAllMood","getMood","updateMood","getAllFitness","getFitness","updateFitness"],"mappings":"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","sourcesContent":["import app from './firebaseconfig.jsx';\r\n\r\n\r\nconst user = app.auth().currentUser;\r\n\r\n\r\nlet foods = [];\r\n\r\nclass FirebaseService {\r\n    constructor(props) {\r\n        this.state = {\r\n            emptyFood: {\r\n                Calories: \"\",\r\n                FoodName: \"\"\r\n            }\r\n        }\r\n    }\r\n\r\n    createUser(user, id) {\r\n        app.database().ref(\"/Users/\" + id + \"/Info\").set(user).catch(error => {\r\n            console.log(error.message)\r\n        });\r\n        app.database().ref(\"/Users/\" + id + \"/Food\").set(this.state.emptyFood).catch(error => {\r\n            console.log(error.message)\r\n        });\r\n    }\r\n    \r\n    addFood = (food, id) => {\r\n        const dbFood = app.database().ref(\"/Users/\" + id + \"/Food\");\r\n        dbFood.push(food);\r\n    }\r\n\r\n    getAllFood(id) {\r\n        const dbFood = app.database().ref(\"/Users/\" + id + \"/Food\");\r\n        return dbFood;\r\n    }\r\n\r\n    getFood(key, id) {\r\n        const dbFood = app.database().ref(\"/Users/\" + id + \"/Food\");\r\n        return dbFood.child(key);\r\n    }\r\n\r\n    updateFood(key, value, id) {\r\n        const dbFood = app.database().ref(\"/Users/\" + id + \"/Food\");\r\n        return dbFood.child(key).update(value);\r\n    }\r\n\r\n    addInfo = (info, id) => {\r\n        const dbInfo = app.database().ref(\"/Users/\" + id + \"/Info\");\r\n        dbInfo.push(info);\r\n    }\r\n\r\n    getInfo(id) {\r\n        const dbInfo = app.database().ref(\"/Users/\" + id + \"/Info\");\r\n        return dbInfo;\r\n    }\r\n\r\n    updateInfo(key, value, id) {\r\n        const dbInfo = app.database().ref(\"/Users/\" + id + \"/Info\");\r\n        return dbInfo.child(key).update(value);\r\n    }\r\n\r\n    addMood = (mood, id) => {\r\n        const dbMood = app.database().ref(\"/Users/\" + id + \"/Mood\");\r\n        dbMood.push(mood);\r\n    }\r\n\r\n    getAllMood(id) {\r\n        const dbMood = app.database().ref(\"/Users/\" + id + \"/Mood\");\r\n        return dbMood;\r\n    }\r\n\r\n    getMood(key, id) {\r\n        const dbMood = app.database().ref(\"/Users/\" + id + \"/Mood\");\r\n        return dbMood.child(key);\r\n    }\r\n\r\n    updateMood(key, value, id) {\r\n        const dbMood = app.database().ref(\"/Users/\" + id + \"/Mood\");\r\n        return dbMood.child(key).update(value);\r\n    }\r\n\r\n    addFitness = (fitness, id) => {\r\n        const dbFitness = app.database().ref(\"/Users/\" + id + \"/Fitness\");\r\n        dbFitness.push(fitness);\r\n    }\r\n\r\n    getAllFitness(id) {\r\n        const dbFitness = app.database().ref(\"/Users/\" + id + \"/Fitness\");\r\n        return dbFitness;\r\n    }\r\n\r\n    getFitness(key, id) {\r\n        const dbFitness = app.database().ref(\"/Users/\" + id + \"/Fitness\");\r\n        return dbFitness.child(key);\r\n    }\r\n\r\n    updateFitness(key, value, id) {\r\n        const dbFitness = app.database().ref(\"/Users/\" + id + \"/Fitness\");\r\n        return dbFitness.child(key).update(value);\r\n    }\r\n\r\n    addApp = (appoint, date, id) => {\r\n        const dbApp = app.database().ref(\"/Appointments/\" + date)\r\n        dbApp.push(appoint);\r\n    }\r\n\r\n    \r\n}\r\nexport default new FirebaseService();"]},"metadata":{},"sourceType":"module"}