{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hasib\\\\Documents\\\\GitHub\\\\WellbeingApp\\\\src\\\\MoodTracker.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-lone-blocks */\nimport React from \"react\";\nimport { Planet } from \"react-kawaii\";\nimport styled from \"styled-components\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./MoodTracker.css\";\nimport { Button as MoodButton } from \"reactstrap\";\nimport { BrowserRouter as Router, Switch, Route, Link, useHistory } from \"react-router-dom\";\nimport app from './firebaseconfig';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport clsx from 'clsx';\nimport Drawer from '@material-ui/core/Drawer';\nimport FirebaseService from './firebaseservice';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KawaiiContainer = styled.section`\n  left: 50%;\n  transform: translate(-50%);\n  position: relative;\n  margin-top: 200px;\n  width: 150px;\n`;\n_c = KawaiiContainer;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1\n  },\n  list: {\n    width: 250\n  },\n  fullList: {\n    width: 'auto'\n  }\n}));\n\nfunction ButtonAppBar() {\n  _s();\n\n  const classes = useStyles();\n  const history = useHistory();\n  const [state, setState] = React.useState({\n    left: false\n  });\n\n  const toggleDrawer = (anchor, open) => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state,\n      [anchor]: open\n    });\n  };\n\n  const goToSelected = text => {\n    if (text === 'Home') {\n      history.push('/');\n    } else if (text === 'Book Appointment') {\n      history.push('/bookappointment');\n    } else if (text === 'Fitness') {\n      history.push('/fitness');\n    } else if (text === 'Nutrition') {\n      history.push('/nutrition');\n    } else if (text === 'Information') {\n      history.push('/information');\n    }\n  };\n\n  const list = anchor => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: clsx(classes.list, {\n      [classes.fullList]: anchor === 'top' || anchor === 'bottom'\n    }),\n    role: \"presentation\",\n    onClick: toggleDrawer(anchor, false),\n    onKeyDown: toggleDrawer(anchor, false),\n    children: [/*#__PURE__*/_jsxDEV(List, {\n      children: ['Home', 'Feed', 'Fitness', 'Nutrition', 'Book Appointment'].map((text, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        onClick: () => goToSelected(text),\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this)\n      }, text, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: ['Information', 'Settings'].map((text, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this)\n      }, text, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 7\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(AppBar, {\n        position: \"static\",\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            edge: \"start\",\n            onClick: toggleDrawer('left', true),\n            className: classes.menuButton,\n            color: \"inherit\",\n            \"aria-label\": \"menu\",\n            children: [/*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n              anchor: 'left',\n              open: state['left'],\n              onClose: toggleDrawer(['right', 'top', 'bottom'], false),\n              children: list('left')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            className: classes.title,\n            children: \"Mood Tracker\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"inherit\",\n            onClick: () => app.auth().signOut(),\n            children: \"Log Out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 3\n  }, this);\n}\n\n_s(ButtonAppBar, \"ELVTeJu+TpMEVuyY5O9IfJMocHs=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c2 = ButtonAppBar;\nlet userAuth = app.auth().currentUser;\n\nclass Welcome extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      app.auth().onAuthStateChanged(user => {\n        if (user) {\n          console.log(\"User is logged in\");\n          userAuth = user;\n          console.log(userAuth);\n          FirebaseService.getAllMood(userAuth.uid).on(\"value\", this.onDataChange);\n        } else {\n          console.log(\"User not logged in\");\n        }\n      });\n\n      if (this.state.isLoading === true) {\n        this.setState({\n          isLoading: false\n        });\n      }\n\n      if (userAuth !== null) {\n        console.log(userAuth.uid);\n      }\n    };\n\n    this.componentWillUnmount = () => {\n      app.auth().onAuthStateChanged(user => {\n        if (user) {\n          console.log(\"User is logged in\");\n          userAuth = user;\n          console.log(userAuth);\n          FirebaseService.getAllMood(userAuth.uid).off(\"value\", this.onDataChange);\n        } else {\n          console.log(\"User not logged in\");\n        }\n      });\n\n      if (userAuth !== null) {\n        console.log(userAuth.uid);\n      }\n    };\n\n    this.onDataChange = items => {\n      console.log(items);\n      let moods = [];\n      items.forEach(item => {\n        let data = item.val();\n        moods.push({\n          key: item.key,\n          emotion: data.Emotion,\n          time: data.Time\n        });\n      });\n      this.setState({\n        moodhistory: moods,\n        isLoading: false\n      });\n    };\n\n    this.clickeds = () => {\n      this.setState({\n        isClicked: true\n      });\n    };\n\n    this.back = () => {\n      this.setState({\n        isClicked: false\n      });\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n\n      if (this.state.moodemot === \"\") {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please select a mood\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 16\n        }, this);\n      } else {\n        const unixtime = Math.round(new Date() / 1000);\n        this.state.mood = {\n          Emotion: this.state.moodemot,\n          Time: unixtime\n        };\n        FirebaseService.addMood(this.state.mood, userAuth.uid);\n      }\n    };\n\n    this.state = {\n      mood: {\n        Emotion: \"\",\n        Time: \"\"\n      },\n      moodemot: \"\",\n      color: \"#61DDBC\",\n      moodList: [\"sad\", \"shocked\", \"happy\", \"blissful\"],\n      moodhistory: [],\n      isClicked: false,\n      isLoading: true\n    };\n  }\n\n  render() {\n    const {\n      moodhistory,\n      isLoading\n    } = this.state;\n    const moodList = moodhistory.map(item => {\n      let datet = new Date(item.time * 1000);\n      const format = moment(datet).format('L');\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          style: {\n            whiteSpace: 'nowrap'\n          },\n          children: format\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.emotion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this)]\n      }, item.key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 16\n      }, this);\n    });\n\n    if (isLoading) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 16\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"moodTracker-block\",\n      style: {\n        border: \"2px solid transparent\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: this.state.isClicked ? \"hideEmotion\" : \"showEmotion\",\n          children: [/*#__PURE__*/_jsxDEV(KawaiiContainer, {\n            children: /*#__PURE__*/_jsxDEV(Planet, {\n              mood: this.state.mood.Emotion,\n              color: this.state.color\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 17\n          }, this), this.state.moodList.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"ButtonMoods\",\n              onClick: () => {\n                if (this.state.moodList.includes(item)) // eslint-disable-next-line react/no-direct-mutation-state\n                  this.setState({\n                    moodemot: item\n                  });\n                console.log(this.state.mood.Emotion);\n              },\n              children: item\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 21\n          }, this)), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: this.handleSubmit,\n            children: /*#__PURE__*/_jsxDEV(MoodButton, {\n              style: {\n                backgroundColor: \"#05386b\",\n                fontSize: \"20px\",\n                borderRadius: \"14px\",\n                marginRight: \"60px\"\n              },\n              type: \"submit\",\n              children: \"Submit Mood\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: this.state.isClicked ? \"boxOpened\" : \"boxClosed\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(MoodButton, {\n                style: {\n                  backgroundColor: \"#05386b\",\n                  float: \"left\"\n                },\n                onClick: this.back,\n                children: \"Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 21\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  children: /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                      width: \"20%\",\n                      children: \"Date\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 312,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                      width: \"20%\",\n                      children: \"Moods\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 313,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 311,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: moodList\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: \"50px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: this.state.isClicked ? \"notShow\" : \"show\",\n              onClick: this.clickeds,\n              children: /*#__PURE__*/_jsxDEV(MoodButton, {\n                style: {\n                  backgroundColor: \"#05386b\",\n                  fontSize: \"20px\",\n                  borderRadius: \"14px\",\n                  marginRight: \"60px\"\n                },\n                children: \"History\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default function Mood() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ButtonAppBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Welcome, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 350,\n    columnNumber: 9\n  }, this);\n}\n_c3 = Mood;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"KawaiiContainer\");\n$RefreshReg$(_c2, \"ButtonAppBar\");\n$RefreshReg$(_c3, \"Mood\");","map":{"version":3,"sources":["C:/Users/hasib/Documents/GitHub/WellbeingApp/src/MoodTracker.js"],"names":["React","Planet","styled","Button","MoodButton","BrowserRouter","Router","Switch","Route","Link","useHistory","app","makeStyles","AppBar","Toolbar","Typography","IconButton","MenuIcon","List","Divider","ListItem","ListItemIcon","ListItemText","clsx","Drawer","FirebaseService","moment","KawaiiContainer","section","useStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","list","width","fullList","ButtonAppBar","classes","history","state","setState","useState","left","toggleDrawer","anchor","open","event","type","key","goToSelected","text","push","map","index","auth","signOut","userAuth","currentUser","Welcome","Component","constructor","props","componentDidMount","onAuthStateChanged","user","console","log","getAllMood","uid","on","onDataChange","isLoading","componentWillUnmount","off","items","moods","forEach","item","data","val","emotion","Emotion","time","Time","moodhistory","clickeds","isClicked","back","handleSubmit","e","preventDefault","moodemot","unixtime","Math","round","Date","mood","addMood","color","moodList","render","datet","format","whiteSpace","border","includes","backgroundColor","fontSize","borderRadius","float","marginTop","Mood"],"mappings":"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","sourcesContent":["/* eslint-disable no-lone-blocks */\nimport React from \"react\";\nimport { Planet } from \"react-kawaii\";\nimport styled from \"styled-components\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./MoodTracker.css\";\nimport { Button as MoodButton } from \"reactstrap\";\nimport { BrowserRouter as Router, Switch, Route, Link, useHistory } from \"react-router-dom\";\nimport app from './firebaseconfig';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport clsx from 'clsx';\nimport Drawer from '@material-ui/core/Drawer';\nimport FirebaseService from './firebaseservice';\nimport moment from 'moment';\n\n\nconst KawaiiContainer = styled.section`\n  left: 50%;\n  transform: translate(-50%);\n  position: relative;\n  margin-top: 200px;\n  width: 150px;\n`;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  list: {\n    width: 250,\n  },\n  fullList: {\n  width: 'auto',\n  },\n}));\n\nfunction ButtonAppBar() {\n  const classes = useStyles();\n  const history = useHistory();\n  const [state, setState] = React.useState({\n      left: false,\n  });\n  \n  const toggleDrawer = (anchor, open) => (event) => {\n      if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n      }\n  \n      setState({ ...state, [anchor]: open });\n  };\n\n  const goToSelected = (text) => {\n      if (text === 'Home') {\n        history.push('/')\n      }\n      else if (text === 'Book Appointment') {\n          history.push('/bookappointment')\n      }\n      else if (text === 'Fitness') {\n          history.push('/fitness')\n      }\n      else if (text === 'Nutrition') {\n          history.push('/nutrition')\n      }\n      else if (text === 'Information') {\n          history.push('/information')\n      }      \n  }\n  \n  const list = (anchor) => (\n      <div\n      className={clsx(classes.list, {\n          [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n      })}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n      >\n      <List>\n          {['Home', 'Feed', 'Fitness', 'Nutrition', 'Book Appointment'].map((text, index) => (\n          <ListItem button key={text} onClick={ () => goToSelected(text)}>\n              <ListItemText primary={text} />\n          </ListItem>\n          ))}\n      </List>\n      <Divider />\n      <List>\n          {['Information', 'Settings'].map((text, index) => (\n          <ListItem button key={text}>\n              <ListItemText primary={text} />\n          </ListItem>\n          ))}\n      </List>\n      </div>\n  );\n\n\nreturn (\n  <div>\n      <div className={classes.root}>\n          <AppBar position=\"static\">\n              <Toolbar>\n              <IconButton edge=\"start\" onClick={toggleDrawer('left', true)} className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n              <MenuIcon />\n              <Drawer anchor={'left'} open={state['left']} onClose={toggleDrawer(['right', 'top', 'bottom'], false)}>\n                      {list('left')}\n                  </Drawer>\n              </IconButton>\n              <Typography variant=\"h6\" className={classes.title}>\n                  Mood Tracker\n              </Typography>\n              <Button color=\"inherit\" onClick={() => app.auth().signOut()}>Log Out</Button>\n              </Toolbar>\n          </AppBar>\n      </div>\n  </div>\n);\n}\n\nlet userAuth = app.auth().currentUser;\n\nclass Welcome extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mood: {\n          Emotion: \"\",\n          Time: \"\"\n      },\n      moodemot: \"\",\n      color: \"#61DDBC\",\n      moodList: [\"sad\", \"shocked\", \"happy\", \"blissful\"],\n      moodhistory: [],\n      isClicked: false,\n      isLoading: true\n    };\n  }\n\n    componentDidMount = () => {\n        app.auth().onAuthStateChanged((user) => {\n\t\t\tif (user) {\n\t\t\t\tconsole.log(\"User is logged in\")\n                userAuth = user\n                console.log(userAuth)\n                FirebaseService.getAllMood(userAuth.uid).on(\"value\", this.onDataChange);\n\n\t\t\t} else {\n                console.log(\"User not logged in\")\n\t\t\t}\n            \n\t\t});\n        if (this.state.isLoading === true) {\n            this.setState({ isLoading: false })\n        }\n        if (userAuth !== null) {\n            console.log(userAuth.uid)\n        }\n    }\n\n    componentWillUnmount = () => {\n        app.auth().onAuthStateChanged((user) => {\n\t\t\tif (user) {\n\t\t\t\tconsole.log(\"User is logged in\")\n                userAuth = user\n                console.log(userAuth)\n                FirebaseService.getAllMood(userAuth.uid).off(\"value\", this.onDataChange);\n\n\t\t\t} else {\n                console.log(\"User not logged in\")\n\t\t\t}\n            \n\t\t});\n        if (userAuth !== null) {\n            console.log(userAuth.uid)\n        }\n    }\n\n    onDataChange = (items) => {\n        console.log(items);\n        let moods = [];\n        items.forEach(item => {\n            let data = item.val();\n            moods.push({\n                key: item.key,\n                emotion: data.Emotion,\n                time: data.Time              \n            });\n        });\n    \n        this.setState({\n            moodhistory: moods,\n            isLoading: false\n        });\n    }\n\n  clickeds = () => {\n    this.setState({ isClicked: true });\n  };\n\n  back = () => {\n    this.setState({ isClicked: false });\n  };\n\n  handleSubmit = async(e) => {\n    e.preventDefault();\n    if (this.state.moodemot === \"\") {\n        return <p>Please select a mood</p>\n    } else {\n        const unixtime = Math.round(new Date()/1000)\n        this.state.mood = { \n            Emotion: this.state.moodemot,\n            Time: unixtime \n        }\n        FirebaseService.addMood(this.state.mood, userAuth.uid);\n    }\n    \n}\n\n  render() {\n    const { moodhistory, isLoading } = this.state\n    const moodList = moodhistory.map(item => {\n        let datet = new Date(item.time*1000);\n        const format = moment(datet).format('L');\n        return <tr key={item.key}>\n            <td style={{whiteSpace: 'nowrap'}}>{format}</td>\n            <td>{item.emotion}</td>\n        </tr>\n    });\n\n    if (isLoading) {\n        return <p>Loading...</p>\n    }\n    return (\n        <div\n            className=\"moodTracker-block\"\n            style={{ border: \"2px solid transparent\" }}\n        >\n            <div>\n                <div\n                className={\n                    this.state.isClicked ? \"hideEmotion\" : \"showEmotion\"\n                }\n                >\n                <KawaiiContainer>\n                    <Planet mood={this.state.mood.Emotion} color={this.state.color} />\n                </KawaiiContainer>\n                <br />\n                                  \n                {this.state.moodList.map((item, index) => (\n                    <div>\n                    <button\n                        key={index}\n                        className=\"ButtonMoods\"\n                        onClick={() => {\n                        if (this.state.moodList.includes(item))\n                            // eslint-disable-next-line react/no-direct-mutation-state\n                            this.setState({moodemot: item})\n                            console.log(this.state.mood.Emotion)\n                        }}\n                    >\n                        {item}\n                    </button>\n                    </div>\n                ))}\n                <form onSubmit={this.handleSubmit}> \n                    <MoodButton\n                            style={{\n                            backgroundColor: \"#05386b\",\n                            fontSize: \"20px\",\n                            borderRadius: \"14px\",\n                            marginRight: \"60px\"\n                            }}\n                            type=\"submit\"\n                        >\n                            Submit Mood\n                    </MoodButton>\n                </form>\n                </div>\n\n                <div>\n                <div\n                    className={this.state.isClicked ? \"boxOpened\" : \"boxClosed\"}\n                >\n                    <div>\n                    <MoodButton\n                        style={{ backgroundColor: \"#05386b\", float: \"left\" }}\n                        onClick={this.back}\n                    >\n                        Back\n                    </MoodButton>{\" \"}\n                    <br />\n                    <table>\n                        <thead>\n                            <th>\n                                <tr width=\"20%\">Date</tr>\n                                <tr width=\"20%\">Moods</tr>\n                            </th>\n                        </thead>\n                        <tbody>\n                            {moodList}\n                        </tbody>\n                    </table>\n                    </div>\n                </div>\n\n                <div style={{ marginTop: \"50px\" }}>\n                    <div\n                    className={this.state.isClicked ? \"notShow\" : \"show\"}\n                    onClick={this.clickeds}\n                    >\n                    <MoodButton\n                        style={{\n                        backgroundColor: \"#05386b\",\n                        fontSize: \"20px\",\n                        borderRadius: \"14px\",\n                        marginRight: \"60px\"\n                        }}\n                    >\n                        History\n                    </MoodButton>\n                    </div>\n                </div>\n                </div>\n            </div>\n        </div>\n\n    );\n  }\n}\n\nexport default function Mood() {\n    return (\n        <div>\n            <ButtonAppBar />\n            <Welcome />\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}